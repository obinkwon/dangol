<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.ICategoryDao">
	<sql id="topPaging">
		SELECT
			*
		FROM(
			SELECT
				ROWNUM AS RNUM
				,t1.*
			FROM(
	</sql>
	<sql id="btmPaging">
			)t1
		) WHERE RNUM BETWEEN #{offset} AND #{offset} + (#{storesPerPage} - 1)
	</sql>
	<sql id="dask">
		<choose>
			<when test="dask !=null">
				#{dask}
			</when>
			<otherwise>
				null
			</otherwise>
		</choose>
	</sql>
	<sql id="simage">
		<choose>
			<when test="simage !=null">
				#{simage}
			</when>
			<otherwise>
				null
			</otherwise>
		</choose>
	</sql>
	<select id="selectAdminAllByFood" resultType="admin">
		select * from admins where atype = 'food' order by anum
	</select>
	<select id="selectAdminAllByTheme" resultType="admin">
		select * from admins where atype = 'theme' order by anum
	</select>
	<!-- 음식종류별 가게 리스트 가져오기 -->
	<select id="selectStoreListType" parameterType="admin" resultType="store">
		<include refid="topPaging"/>
		SELECT
			A.SNUM AS snum
			,A.BID AS bid
			,A.SINTRO AS sintro
			,A.SNAME AS sname
			,A.SADDRESS AS saddress
			,A.SDETAILADDR AS sdetailaddr
			,A.SPHONE AS sphone
			,A.STIME_START AS stime_start
			,A.STIME_END AS stime_end
			,A.SPARKING AS sparking
			,A.SIMAGE AS simage
			,A.STYPE AS stype
			,A.SHOLIDAY AS sholiday
			,A.SDATE AS sdate
			,A.SRATELV0 AS sratelv0
			,A.SRATELV1 AS sratelv1
			,A.SRATELV2 AS sratelv2
			,A.SRATELV3 AS sratelv3
			,A.SLIMIT AS slimit
			,(SELECT 
					COUNT(*) 
				FROM 
					GRADES B
				WHERE 
					B.SNUM = A.SNUM
					AND B.GCURRENT = 'yes' 
					AND B.GLEVEL <![CDATA[>]]> 0
			) AS dancnt 
		FROM 
			STORES A
		WHERE 
			A.STYPE = #{anum}
		ORDER BY A.SDATE DESC
		<include refid="btmPaging"/>
	</select>
	<select id="selectGradeCountBySnum" parameterType="int" resultType="int">
		SELECT 
			COUNT(*) 
		FROM 
			GRADES 
		WHERE 
			SNUM = #{snum} 
			AND GCURRENT = 'yes' 
			AND GLEVEL <![CDATA[>]]> 0
	</select>
	<!-- 가게 리뷰 총점 -->
	<select id="selectCommentTotal" parameterType="store" resultType="int">
		SELECT 
			NVL(SUM(C.CTOTAL),0)
		FROM 
			GRADES A
			LEFT JOIN DETAILS B ON A.GNUM = B.GNUM
			LEFT JOIN COMMENTS C ON B.DNUM = C.DNUM
		WHERE 
			A.SNUM = #{snum} 
			AND A.GCURRENT = 'yes'
			AND B.DCOUNT <![CDATA[>]]> 0
	</select>
	<!-- 가게 리뷰 총 갯수 -->
	<select id="selectCommentTotalCnt" parameterType="store" resultType="int">
		SELECT 
			COUNT(*)
		FROM 
			GRADES A
			LEFT JOIN DETAILS B ON A.GNUM = B.GNUM
			LEFT JOIN COMMENTS C ON B.DNUM = C.DNUM
		WHERE 
			A.SNUM = #{snum} 
			AND A.GCURRENT = 'yes'
			AND B.DCOUNT <![CDATA[>]]> 0
	</select>
	<select id="selectDetailAllByGnum" parameterType="int" resultType="details">
		SELECT 
			DNUM AS dnum
			,GNUM AS gnum
			,DDATE AS ddate
			,DPERSON AS dperson
			,DMENU AS dmenu
			,DTYPE AS dtype
			,DASK AS dask
			,DCHECK AS dcheck
			,DTIME AS dtime
			,DCOUNT AS dcount
			,DLIMIT AS dlimit
		FROM 
			DETAILS 
		WHERE 
			GNUM = #{gnum} 
			AND DCOUNT != 0
	</select>
	<select id="selectDetailsListGnum" parameterType="grade" resultType="details">
		SELECT 
			DNUM AS dnum
			,GNUM AS gnum
			,DDATE AS ddate
			,DPERSON AS dperson
			,DMENU AS dmenu
			,DTYPE AS dtype
			,DASK AS dask
			,DCHECK AS dcheck
			,DTIME AS dtime
			,DCOUNT AS dcount
			,DLIMIT AS dlimit
		FROM 
			DETAILS 
		WHERE 
			GNUM = #{gnum} 
			AND DCOUNT <![CDATA[>]]> 0
	</select>
	<select id="selectCommentOneByDnum" parameterType="int" resultType="comment">
		SELECT
			*
		FROM 
			COMMENTS 
		WHERE 
			DNUM = #{dnum}
	</select>
	<select id="selectStagList" parameterType="store" resultType="admin">
		SELECT 
			AVALUE AS avalue
		FROM 
			ADMINS 
		WHERE 
			ANUM IN (
				SELECT 
					ANUM
				FROM 
					STAG 
				WHERE 
					SNUM = #{snum}
			)
		ORDER BY ANUM
	</select>
	<select id="selectAdminOne" parameterType="int" resultType="admin">
		SELECT * 
		FROM 
			ADMINS 
		WHERE 
			ANUM = #{anum} 
	</select>
	<select id="selectStoreAllByAnum" parameterType="java.util.HashMap" resultType="store">
		select * from
		(select rownum as rn ,e.* from (select * from stores where snum in (select snum from stag where anum = #{anum}) order by sdate desc) e) 
		where rn between #{offset} and (#{offset}+#{storesPerPage}-1) 
	</select>
	<select id="selectStoreNew" parameterType="java.util.HashMap" resultType="store">
		select * from
		(select rownum as rn ,e.* from (select * from stores where sdate between (sysdate-10) and sysdate order by sdate desc) e) 
		where rn between #{offset} and (#{offset}+#{storesPerPage}-1)
	</select>
	<select id="selectStoreAllByArea" parameterType="java.util.HashMap" resultType="store">
		select * from
		(select rownum as rn ,e.* from (select * from stores where saddress like '${areaName}%' order by sdate desc) e) 
		where rn between #{offset} and (#{offset}+#{storesPerPage}-1)
	</select>
	<select id="selectMtagByMid" parameterType="String" resultType="mtag">
		select * from mtag where mid = #{mid}
	</select>
	<select id="selectStagByAnum" parameterType="int" resultType="stag">
		select * from stag where anum = #{anum}
	</select>
	<select id="selectStoreOneByRecommend" parameterType="java.util.HashMap" resultType="store">
		select * from stores where snum = #{snum} and saddress = #{maddress} 
	</select>
	<select id="selectStoreOneByRecommendPre" parameterType="java.util.HashMap" resultType="store">
		select * from stores where snum = #{snum} and (saddress = #{marea1} or saddress = #{marea2})
	</select>
	<select id="selectOrderList" parameterType="store" resultType="order">
		SELECT 
			ORD AS ord
			,SNUM AS snum
			,ONAME AS oname
			,OPRICE AS oprice
			,OIMAGE AS oimage
		FROM 
			ORDERS 
		WHERE 
			SNUM = #{snum}
	</select>
	<select id="selectOrderOne" parameterType="order" resultType="order">
		SELECT
			ORD AS ord
			,SNUM AS snum
			,ONAME AS oname
			,OPRICE AS oprice
			,OIMAGE AS oimage
		FROM 
			ORDERS 
		WHERE 
			ORD = #{ord}
			AND SNUM = #{snum}
	</select>
	<select id="selectGradeBySnumAndMid" parameterType="grade" resultType="grade">
		SELECT
			GNUM AS gnum
			,MID AS mid
			,SNUM AS snum
			,GLEVEL AS glevel
			,GCURRENT AS gcurrent
			,GLIKE AS glike
		FROM 
			GRADES 
		WHERE 
			SNUM = #{snum} 
			AND MID = #{mid} 
			AND GCURRENT = 'yes'
	</select>
	<select id="selectGlevelBySnum" parameterType="store" resultType="java.util.HashMap">
		SELECT 
			GLEVEL
			,COUNT(*) AS dangol 
		FROM 
			GRADES 
		WHERE 
			SNUM = #{snum} 
			AND GCURRENT = 'yes' 
		GROUP BY GLEVEL 
		ORDER BY GLEVEL
	</select>
	<select id="selectCommentListBySnum" parameterType="store" resultType="comment">
		SELECT 
			C.CNUM AS cnum
			,C.DNUM AS dnum
			,C.CTOTAL AS ctotal
			,C.CTASTE AS ctaste
			,C.CSERVICE AS cservice
			,C.CPRICE AS cprice
			,C.CDATE AS cdate
			,C.CREVIEW AS creview
			,B.MID AS mid
			,B.GNUM AS gnum
			,(SELECT MIMAGE FROM MEMBERS WHERE MID = B.MID) AS mimage
		FROM 
			COMMENTS C
            LEFT JOIN DETAILS A ON A.DNUM = C.DNUM
            LEFT JOIN GRADES B ON A.GNUM = B.GNUM 
		WHERE 
            B.SNUM = #{snum}
		ORDER BY C.CDATE DESC
	</select>
	<select id="selectMyCommentListByGrade" parameterType="grade" resultType="comment">
		SELECT
			C.CNUM AS cnum
			,C.DNUM AS dnum
			,C.CTOTAL AS ctotal
			,C.CTASTE AS ctaste
			,C.CSERVICE AS cservice
			,C.CPRICE AS cprice
			,C.CDATE AS cdate
			,C.CREVIEW AS creview
			,B.MID AS mid
			,B.GNUM AS gnum
			,(SELECT MIMAGE FROM MEMBERS WHERE MID = B.MID) AS mimage	
		FROM 
			COMMENTS C
			LEFT JOIN DETAILS A ON A.DNUM = C.DNUM 
			LEFT JOIN GRADES B ON A.GNUM = B.GNUM 
		WHERE
			B.MID = #{mid} 
			AND B.SNUM = #{snum}
			AND A.DCOUNT <![CDATA[>]]> 0
		ORDER BY CDATE DESC
	</select>
	<select id="selectGradeByDnum" parameterType="int" resultType="grade">
		select * from grades where gnum = (select gnum from Details where dnum = #{dnum})
	</select>
	<select id="selectDetailReserveByDdate" parameterType="java.util.HashMap" resultType="details">
		select * from details where gnum in (select gnum from grades where snum = #{snum}) and ddate = #{ddate} and dtype='yes'
	</select>
	<insert id="insertGradeBegin" parameterType="grade" keyProperty="gnum" useGeneratedKeys="true">
		<selectKey keyProperty="gnum" order="BEFORE" resultType="int">select grades_seq.nextval from dual</selectKey>
		insert into grades values(#{gnum},#{mid},#{snum},0,'yes',0)
	</insert>
	<insert id="insertReserveDetail" parameterType="details">
		insert into details values(details_seq.nextval,#{gnum},#{ddate},#{dperson},#{dmenu},'yes',<include refid="dask"/>,'no',#{dtime},0,#{dlimit})
	</insert>
	<delete id="deleteCommentOneByCnum" parameterType="int">
		delete from comments where cnum = #{cnum}
	</delete>
	<select id="selectCommentByCnum" parameterType="int" resultType="comment">
		select * from comments where cnum = #{cnum}
	</select>
	<update id="updateDetailByDnum" parameterType="int">
		update details set dcount = 0 where dnum = #{dnum}
	</update>
	<select id="selectDetailByMidSnum" parameterType="java.util.HashMap" resultType="details">
		select * from details where gnum in (select gnum from grades where mid = #{mid} and snum =#{snum}) and dcount = #{dcount} order by dcount desc
	</select>
	<select id="selectDetailMaxDcount" parameterType="grade" resultType="int">
		select max(dcount) from details where gnum in (select gnum from grades where mid = #{mid} and snum =#{snum})
	</select>
	<update id="updateDcountMinusByDnum" parameterType="int">
		update details set dcount = dcount - 1 where dnum = #{dnum} 
	</update>
	<select id="selectDetailByDnum" parameterType="int" resultType="details">
		select * from details where dnum = #{dnum}
	</select>
	<select id="selectAdminTasteTag" resultType="admin">
		select * from admins where atype= 'taste'
	</select>
	<update id="updateCommentOne" parameterType="comment">
		update comments set ctotal=#{ctotal}, cservice=#{cservice}, cprice=#{cprice}, ctaste = #{ctaste}, creview = #{creview} where cnum = #{cnum}
	</update>
	<select id="selectCommentByDnum" parameterType="int" resultType="comment">
		select * from comments where dnum = #{dnum}
	</select>
	<select id="selectStoreDB" resultType="storedb">
		select * from storedb
	</select>
	<select id="getStoreNewCount" resultType="int"> 
		select count(*) from stores where sdate between (sysdate-10) and sysdate
	</select>
	<select id="getStoreListCount" parameterType="admin" resultType="int"> 
		SELECT 
			COUNT(*) 
		FROM 
			STORES 
		WHERE 
			STYPE = #{anum}
	</select>
	<select id="getStoreAllByAnumCount" parameterType="int" resultType="int"> 
		select count(*) from stores where snum in (select snum from stag where anum = #{anum})
	</select>
	<select id="getStoreAllByAreaCount" parameterType="java.util.HashMap" resultType="int"> 
		select count(*) from stores where saddress like '${areaName}%'
	</select>
	<insert id="insertStores" parameterType="store">
		insert into stores values(stores_seq.nextval,#{bid},#{sintro},#{sname}, #{saddress}, #{sdetailaddr}, #{sphone},#{stime}, #{sparking},
	<include refid="simage"/>,#{stype},#{sholiday},sysdate,#{sratelv0}, #{sratelv1}, #{sratelv2}, #{sratelv3},#{slimit},#{slatitude},#{slongitude})
	</insert>
	<select id="selectKeywordStore" parameterType="java.util.HashMap" resultType="store">
		select * from stores where sname like '${keyword}%'
	</select>
</mapper>